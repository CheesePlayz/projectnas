@using ProjectNAS.Models
@using ProjectNAS.Components
<style>
    .grid-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(128px, 1fr));
        gap: 10px; /* Adjust the spacing between grid items */
        background-color: #FFFFFF;
        padding: 10px;
    }

    .grid-item {
        background-color: rgba(240, 240, 240, 0.8);
        border: 1px solid rgba(230, 230, 230, 1);
        padding: 20px;
        font-size: 20px;
        text-align: center;
        word-wrap: break-word; /* Break long words */
        overflow-wrap: break-word; /* Break words that are too long */
        box-sizing: border-box; /* Include padding and borders in the element's total width and height */
    }

    .grid-item:hover {
            background-color: #b5e2ff;
    }

    img {
        object-fit: fill;
        width: 100%; /* Make image responsive to grid item width */
        max-width: 128px; /* Set maximum width to 128px */
        max-height: 128px; /* Set maximum height to 128px */
        height: auto; /* Maintain aspect ratio */
        box-sizing: border-box; /* Include padding and borders in size calculations */
    }
</style>

@code {
    [Parameter]
    public List<FileModel>? listFileModels { get; set; }

    [Parameter]
    public string[]? dirs { get; set; }
}

<h3>Files in Uploads folder</h3>

<h4>Subdirectories</h4>
<div class="grid-container">
    @{
        if (dirs != null)
        {
            foreach (var x in dirs)
            {
                <div class="grid-item"> <FolderComponent directory=@x /> </div>
            }
        }
        else
        {
            <p>No subfolders.</p>
        }

    }
</div>


<h4>Files</h4>
<div class="grid-container">
    @{
        if (listFileModels != null)
        {
            foreach (var file in listFileModels)
            {
                <div class="grid-item"> <FileShowcaseComponent fileModel="file" /> </div>
            }
        }
        else
        {
            <p>No files.</p>
        }
    }
</div>


